name: ci
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]

jobs:
  build:
    env:
      VAULT_ADDR: 'http://127.0.0.1:8200'
      VAULT_TOKEN: 'vault_root_token'
      DATABASE_ADDR: 'database'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby: [ '2.5', '2.6', '2.7', '3.0' ]
    services:
      vault:
        image: hashicorp/vault
        ports:
          - "8200:8200"
        env:
          VAULT_DEV_ROOT_TOKEN_ID: vault_root_token
          SKIP_SETCAP: true
      database:
        image: postgres:14.1-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: 'vault_root'
          POSTGRES_PASSWORD: 'root_password'
          POSTGRES_DB: 'app_db'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true

      - name: Set up Vault
        run: sh local/vault/setup.sh

      - name: Run specs
        env:
          COVERAGE: true
        run: bundle exec rspec

      - name: Upload coverage
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: bash <(curl -s https://codecov.io/bash)

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
          bundler-cache: true
      - name: Set up credentials
        run: |
          mkdir -p $HOME/.gem
          touch $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          printf -- "---\n:rubygems_api_key: ${{secrets.RUBYGEMS_AUTH_TOKEN}}\n" > $HOME/.gem/credentials

      - name: Get version
        run: echo "${GITHUB_REF/refs\/tags\//}" > release.tag
      - name: Set version
        run: sed -i "s/0.0.0/$(<release.tag)/g" */**/version.rb

      - name: Build gem
        run: gem build *.gemspec
      - name: Push gem
        run: gem push *.gem