
version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.15.3
  aws-cli: circleci/aws-cli@1.4.0
  aws-eks: circleci/aws-eks@1.0.3
  ci: matic/orb-common@0.2
  ruby: circleci/ruby@1.8.0

jobs:

  rspec-test:
    resource_class: small
    parameters:
      ruby-version:
        type: string
    docker:
      - image: cimg/ruby:<< parameters.ruby-version >>
        environment:
          COVERAGE: true
          CODECOV_TOKEN: a0c859b6-dfb7-4d9f-9933-2dd945cdd960
          VAULT_ADDR: 'http://127.0.0.1:8200'
          VAULT_TOKEN: 'vault_root_token'
      - image: vault
        environment:
          VAULT_DEV_ROOT_TOKEN_ID: vault_root_token
          SKIP_SETCAP: true
      - image: postgres:14.1-alpine
        environment:
          POSTGRES_DB: 'app_db'
          POSTGRES_USER: 'vault_root'
          POSTGRES_PASSWORD: 'root_password'
    steps:
      - checkout
      - ruby/install-deps
      - run:
          name: Set up vault
          command: sh local/vault/setup.sh
      - run:
          name: Run RSpec Tests
          command: bundle exec rspec
      - store_test_results:
          path: reports/rspec
      - store_artifacts:
          path: reports/rspec
      - ci/slack-stage-message

  rubocop:
    docker:
      - image: cimg/ruby:2.7.5
    steps:
      - checkout
      - ruby/install-deps
      - run:
          name: Run rubocop
          command: bundle exec rubocop --parallel

workflows:

  settings_reader-vault_resolver.build-pull-request:
    when:
      not:
        equal: [ main, << pipeline.git.branch >> ]
    jobs:

      - rspec-test:
          context: global
          matrix:
            parameters:
              ruby-version: [ '2.5', '2.6', '2.7', '3.0' ]

      - rubocop:
          name: Rubocop
          context: global
